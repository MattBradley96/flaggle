{"ast":null,"code":"import{DateTime}from\"luxon\";import{useMemo}from\"react\";import seedrandom from\"seedrandom\";import{countriesWithImage}from\"../domain/countries\";var forcedCountries={\"2022-02-02\":\"TD\",\"2022-02-03\":\"PY\"};export function getDayString(){return DateTime.now().toFormat(\"dd-MM-yyyy\");}export function useCountry(dayString){var country=useMemo(function(){var forcedCountryCode=\"TD\";var forcedCountry=forcedCountryCode!=null?countriesWithImage.find(function(country){return country.code===forcedCountryCode;}):undefined;return forcedCountry!==null&&forcedCountry!==void 0?forcedCountry:countriesWithImage[Math.floor(seedrandom.alea(dayString)()*countriesWithImage.length)];},[dayString]);var randomAngle=useMemo(function(){return seedrandom.alea(dayString)()*360;},[dayString]);var imageScale=useMemo(function(){var normalizedAngle=45-randomAngle%90;var radianAngle=normalizedAngle*Math.PI/180;// return 1 / (Math.cos(radianAngle) * Math.sqrt(2));\nreturn 1;},[randomAngle]);return[country,randomAngle,imageScale];}","map":{"version":3,"sources":["/home/mb4718/Desktop/flaggle/src/hooks/useCountry.ts"],"names":["DateTime","useMemo","seedrandom","countriesWithImage","forcedCountries","getDayString","now","toFormat","useCountry","dayString","country","forcedCountryCode","forcedCountry","find","code","undefined","Math","floor","alea","length","randomAngle","imageScale","normalizedAngle","radianAngle","PI"],"mappings":"AAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,kBAAT,KAA4C,qBAA5C,CAEA,GAAMC,CAAAA,eAAuC,CAAG,CAC9C,aAAc,IADgC,CAE9C,aAAc,IAFgC,CAAhD,CAKA,MAAO,SAASC,CAAAA,YAAT,EAAwB,CAC7B,MAAOL,CAAAA,QAAQ,CAACM,GAAT,GAAeC,QAAf,CAAwB,YAAxB,CAAP,CACD,CAED,MAAO,SAASC,CAAAA,UAAT,CAAoBC,SAApB,CAAkE,CACvE,GAAMC,CAAAA,OAAO,CAAGT,OAAO,CAAC,UAAM,CAC5B,GAAMU,CAAAA,iBAAiB,CAAG,IAA1B,CACA,GAAMC,CAAAA,aAAa,CACjBD,iBAAiB,EAAI,IAArB,CACIR,kBAAkB,CAACU,IAAnB,CACE,SAACH,OAAD,QAAaA,CAAAA,OAAO,CAACI,IAAR,GAAiBH,iBAA9B,EADF,CADJ,CAIII,SALN,CAOA,MACEH,CAAAA,aADF,SACEA,aADF,UACEA,aADF,CAEET,kBAAkB,CAChBa,IAAI,CAACC,KAAL,CAAWf,UAAU,CAACgB,IAAX,CAAgBT,SAAhB,IAA+BN,kBAAkB,CAACgB,MAA7D,CADgB,CAFpB,CAMD,CAfsB,CAepB,CAACV,SAAD,CAfoB,CAAvB,CAiBA,GAAMW,CAAAA,WAAW,CAAGnB,OAAO,CACzB,iBAAMC,CAAAA,UAAU,CAACgB,IAAX,CAAgBT,SAAhB,IAA+B,GAArC,EADyB,CAEzB,CAACA,SAAD,CAFyB,CAA3B,CAKA,GAAMY,CAAAA,UAAU,CAAGpB,OAAO,CAAC,UAAM,CAC/B,GAAMqB,CAAAA,eAAe,CAAG,GAAMF,WAAW,CAAG,EAA5C,CACA,GAAMG,CAAAA,WAAW,CAAID,eAAe,CAAGN,IAAI,CAACQ,EAAxB,CAA8B,GAAlD,CACA;AACA,MAAO,EAAP,CACD,CALyB,CAKvB,CAACJ,WAAD,CALuB,CAA1B,CAOA,MAAO,CAACV,OAAD,CAAUU,WAAV,CAAuBC,UAAvB,CAAP,CACD","sourcesContent":["import { DateTime } from \"luxon\";\nimport { useMemo } from \"react\";\nimport seedrandom from \"seedrandom\";\nimport { countriesWithImage, Country } from \"../domain/countries\";\n\nconst forcedCountries: Record<string, string> = {\n  \"2022-02-02\": \"TD\",\n  \"2022-02-03\": \"PY\",\n};\n\nexport function getDayString() {\n  return DateTime.now().toFormat(\"dd-MM-yyyy\");\n}\n\nexport function useCountry(dayString: string): [Country, number, number] {\n  const country = useMemo(() => {\n    const forcedCountryCode = \"TD\";\n    const forcedCountry =\n      forcedCountryCode != null\n        ? countriesWithImage.find(\n            (country) => country.code === forcedCountryCode\n          )\n        : undefined;\n\n    return (\n      forcedCountry ??\n      countriesWithImage[\n        Math.floor(seedrandom.alea(dayString)() * countriesWithImage.length)\n      ]\n    );\n  }, [dayString]);\n\n  const randomAngle = useMemo(\n    () => seedrandom.alea(dayString)() * 360,\n    [dayString]\n  );\n\n  const imageScale = useMemo(() => {\n    const normalizedAngle = 45 - (randomAngle % 90);\n    const radianAngle = (normalizedAngle * Math.PI) / 180;\n    // return 1 / (Math.cos(radianAngle) * Math.sqrt(2));\n    return 1;\n  }, [randomAngle]);\n\n  return [country, randomAngle, imageScale];\n}\n"]},"metadata":{},"sourceType":"module"}