[{"/home/mb4718/Desktop/flaggle/src/index.tsx":"1","/home/mb4718/Desktop/flaggle/src/reportWebVitals.ts":"2","/home/mb4718/Desktop/flaggle/src/serviceWorkerRegistration.ts":"3","/home/mb4718/Desktop/flaggle/src/i18n.ts":"4","/home/mb4718/Desktop/flaggle/src/App.tsx":"5","/home/mb4718/Desktop/flaggle/src/hooks/useSettings.ts":"6","/home/mb4718/Desktop/flaggle/src/hooks/useCountry.ts":"7","/home/mb4718/Desktop/flaggle/src/components/Game.tsx":"8","/home/mb4718/Desktop/flaggle/src/components/InstallButton.tsx":"9","/home/mb4718/Desktop/flaggle/src/components/panels/Infos.tsx":"10","/home/mb4718/Desktop/flaggle/src/components/panels/InfosFr.tsx":"11","/home/mb4718/Desktop/flaggle/src/components/panels/Settings.tsx":"12","/home/mb4718/Desktop/flaggle/src/components/panels/Stats.tsx":"13","/home/mb4718/Desktop/flaggle/src/hooks/useGuesses.ts":"14","/home/mb4718/Desktop/flaggle/src/hooks/useMode.ts":"15","/home/mb4718/Desktop/flaggle/src/domain/countries.ts":"16","/home/mb4718/Desktop/flaggle/src/components/Share.tsx":"17","/home/mb4718/Desktop/flaggle/src/components/Guesses.tsx":"18","/home/mb4718/Desktop/flaggle/src/components/CountryInput.tsx":"19","/home/mb4718/Desktop/flaggle/src/domain/geography.ts":"20","/home/mb4718/Desktop/flaggle/src/domain/stats.ts":"21","/home/mb4718/Desktop/flaggle/src/components/panels/Panel.tsx":"22","/home/mb4718/Desktop/flaggle/src/domain/guess.ts":"23","/home/mb4718/Desktop/flaggle/src/components/GuessRow.tsx":"24","/home/mb4718/Desktop/flaggle/src/components/Flaggle.tsx":"25","/home/mb4718/Desktop/flaggle/src/service-worker.ts":"26"},{"size":962,"mtime":1646044237000,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1646044237000,"results":"29","hashOfConfig":"28"},{"size":5284,"mtime":1646044237000,"results":"30","hashOfConfig":"28"},{"size":6796,"mtime":1646209996800,"results":"31","hashOfConfig":"28"},{"size":4896,"mtime":1646210127373,"results":"32","hashOfConfig":"28"},{"size":1211,"mtime":1646044237000,"results":"33","hashOfConfig":"28"},{"size":1249,"mtime":1646213504184,"results":"34","hashOfConfig":"28"},{"size":6151,"mtime":1646212756055,"results":"35","hashOfConfig":"28"},{"size":2325,"mtime":1646044237000,"results":"36","hashOfConfig":"28"},{"size":4034,"mtime":1646210084263,"results":"37","hashOfConfig":"28"},{"size":5372,"mtime":1646210095501,"results":"38","hashOfConfig":"28"},{"size":1841,"mtime":1646209545817,"results":"39","hashOfConfig":"28"},{"size":2373,"mtime":1646044237000,"results":"40","hashOfConfig":"28"},{"size":551,"mtime":1646044237000,"results":"41","hashOfConfig":"28"},{"size":799,"mtime":1646044237000,"results":"42","hashOfConfig":"28"},{"size":29225,"mtime":1646044237000,"results":"43","hashOfConfig":"28"},{"size":2358,"mtime":1646211697469,"results":"44","hashOfConfig":"28"},{"size":779,"mtime":1646044237000,"results":"45","hashOfConfig":"28"},{"size":1978,"mtime":1646044237000,"results":"46","hashOfConfig":"28"},{"size":1704,"mtime":1646044237000,"results":"47","hashOfConfig":"28"},{"size":1788,"mtime":1646214081979,"results":"48","hashOfConfig":"28"},{"size":1264,"mtime":1646044237000,"results":"49","hashOfConfig":"28"},{"size":560,"mtime":1646213987168,"results":"50","hashOfConfig":"28"},{"size":3345,"mtime":1646044237000,"results":"51","hashOfConfig":"28"},{"size":173,"mtime":1646210065685,"results":"52","hashOfConfig":"28"},{"size":2972,"mtime":1646044237000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"f3tfp0",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/home/mb4718/Desktop/flaggle/src/index.tsx",[],["111","112"],"/home/mb4718/Desktop/flaggle/src/reportWebVitals.ts",[],"/home/mb4718/Desktop/flaggle/src/serviceWorkerRegistration.ts",[],"/home/mb4718/Desktop/flaggle/src/i18n.ts",[],"/home/mb4718/Desktop/flaggle/src/App.tsx",[],"/home/mb4718/Desktop/flaggle/src/hooks/useSettings.ts",[],"/home/mb4718/Desktop/flaggle/src/hooks/useCountry.ts",["113","114"],"import { DateTime } from \"luxon\";\nimport { useMemo } from \"react\";\nimport seedrandom from \"seedrandom\";\nimport { countriesWithImage, Country } from \"../domain/countries\";\n\nconst forcedCountries: Record<string, string> = {\n  \"2022-02-02\": \"TD\",\n  \"2022-02-03\": \"PY\",\n};\n\nexport function getDayString() {\n  return DateTime.now().toFormat(\"dd-MM-yyyy\");\n}\n\nexport function useCountry(dayString: string): [Country, number, number] {\n  const country = useMemo(() => {\n    const forcedCountryCode = null;\n    const forcedCountry =\n      forcedCountryCode != null\n        ? countriesWithImage.find(\n            (country) => country.code === forcedCountryCode\n          )\n        : undefined;\n\n    return (\n      forcedCountry ??\n      countriesWithImage[\n        Math.floor(seedrandom.alea(dayString)() * countriesWithImage.length)\n      ]\n    );\n  }, [dayString]);\n\n  const randomAngle = useMemo(\n    () => seedrandom.alea(dayString)() * 360,\n    [dayString]\n  );\n\n  const imageScale = useMemo(() => {\n    const normalizedAngle = 45 - (randomAngle % 90);\n    const radianAngle = (normalizedAngle * Math.PI) / 180;\n    // return 1 / (Math.cos(radianAngle) * Math.sqrt(2));\n    return 1;\n  }, [randomAngle]);\n\n  return [country, randomAngle, imageScale];\n}\n","/home/mb4718/Desktop/flaggle/src/components/Game.tsx",[],"/home/mb4718/Desktop/flaggle/src/components/InstallButton.tsx",[],"/home/mb4718/Desktop/flaggle/src/components/panels/Infos.tsx",["115"],"import { Guesses } from \"../Guesses\";\nimport { Panel } from \"./Panel\";\nimport React from \"react\";\nimport { Flaggle } from \"../Flaggle\";\nimport { formatDistance } from \"../../domain/geography\";\nimport { SettingsData } from \"../../hooks/useSettings\";\nimport { Twemoji } from \"@teuteuf/react-emoji-render\";\n\ninterface InfosProps {\n  isOpen: boolean;\n  close: () => void;\n  settingsData: SettingsData;\n}\n\nexport function Infos({ isOpen, close, settingsData }: InfosProps) {\n  return (\n    <Panel title=\"How to play\" isOpen={isOpen} close={close}>\n      <div className=\"space-y-3 text-justify border-b-2 border-gray-200 pb-3 mb-3\">\n        <div>\n          Guess the <Flaggle /> in 6 guesses.\n        </div>\n        <div>Each guess must be a valid country, territory, ...</div>\n        <div>\n          After each guess, you will have the distance, the direction and the\n          proximity from your guess and the target country.\n        </div>\n      </div>\n      <div className=\"space-y-3 text-justify border-b-2 border-gray-200 pb-3 mb-3\">\n        <div className=\"font-bold\">Examples</div>\n        <div>\n          <Guesses\n            rowCount={1}\n            guesses={[\n              {\n                name: \"Chile\",\n                direction: \"NE\",\n                distance: 13_557_000,\n              },\n            ]}\n            settingsData={settingsData}\n          />\n          <div className=\"my-2\">\n            Your guess <span className=\"uppercase font-bold\">Chile</span> is{\" \"}\n            {formatDistance(13557000, settingsData.distanceUnit)} away from the\n            target country, the target country is in the North-East direction\n            and you have a only 32% of proximity because it&apos;s quite far\n            away!\n          </div>\n        </div>\n        <div>\n          <Guesses\n            rowCount={1}\n            guesses={[\n              {\n                name: \"Finland\",\n                direction: \"SE\",\n                distance: 3_206_000,\n              },\n            ]}\n            settingsData={settingsData}\n          />\n          <div className=\"my-2\">\n            Your second guess{\" \"}\n            <span className=\"uppercase font-bold\">Finland</span> is getting\n            closer! {formatDistance(3206000, settingsData.distanceUnit)} away,\n            South-East direction and 84%!\n          </div>\n        </div>\n        <div>\n          <Guesses\n            rowCount={1}\n            guesses={[\n              {\n                name: \"Lebanon\",\n                direction: \"N\",\n                distance: 0,\n              },\n            ]}\n            settingsData={settingsData}\n          />\n          <div className=\"my-2\">\n            Next guess, <span className=\"uppercase font-bold\">Lebanon</span>,\n            it&apos;s the country to guess! Congrats!{\" \"}\n            <Twemoji text=\"🎉\" options={{ className: \"inline-block\" }} />\n          </div>\n        </div>\n      </div>\n      <div className=\"space-y-3 text-justify border-b-2 border-gray-200 pb-3 mb-3 font-bold\">\n        A new <Flaggle /> will be available every day!\n      </div>\n      <div className=\"space-y-3 text-justify border-b-2 border-gray-200 pb-3 mb-3\">\n        <div className=\"font-bold\">About distance</div>\n        <div>\n          The distances displayed correspond to the distances between the\n          selected and the target territory centers.\n        </div>\n        <div>\n          For instance, the computed distance between United States and Canada\n          is around {formatDistance(2_260_000, settingsData.distanceUnit)} even\n          if they have a common border.\n        </div>\n      </div>\n      <div className=\"space-y-3 text-justify pb-3\">\n      <div>\n        Made by Matt Bradley\n      </div>\n      <div>\n      Want to support?{\" \"}\n      <a\n        className=\"underline\"\n        href=\"https://monzo.me/matthewbradley/1.00?d=Thanks%20for%20being%20such%20a%20great%20guy\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Monzo me a quid.\n      </a>\n      </div>\n    </div>\n  </Panel>\n);\n}\n","/home/mb4718/Desktop/flaggle/src/components/panels/InfosFr.tsx",[],"/home/mb4718/Desktop/flaggle/src/components/panels/Settings.tsx",[],"/home/mb4718/Desktop/flaggle/src/components/panels/Stats.tsx",[],"/home/mb4718/Desktop/flaggle/src/hooks/useGuesses.ts",[],"/home/mb4718/Desktop/flaggle/src/hooks/useMode.ts",[],"/home/mb4718/Desktop/flaggle/src/domain/countries.ts",[],"/home/mb4718/Desktop/flaggle/src/components/Share.tsx",["116"],"import { DateTime, Interval } from \"luxon\";\nimport { useMemo } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport {\n  computeProximityPercent,\n  generateSquareCharacters,\n  getDirectionEmoji,\n} from \"../domain/geography\";\nimport { Guess } from \"../domain/guess\";\nimport React from \"react\";\nimport { SettingsData } from \"../hooks/useSettings\";\n\nconst START_DATE = DateTime.fromISO(\"2022-03-01\");\n\ninterface ShareProps {\n  guesses: Guess[];\n  dayString: string;\n  settingsData: SettingsData;\n  hideImageMode: boolean;\n  rotationMode: boolean;\n}\n\nexport function Share({\n  guesses,\n  dayString,\n  settingsData,\n  hideImageMode,\n  rotationMode,\n}: ShareProps) {\n  const { t } = useTranslation();\n  const { theme } = settingsData;\n\n  const shareText = useMemo(() => {\n    const win = guesses[guesses.length - 1]?.distance === 0;\n    const bestDistance = Math.min(...guesses.map(({ distance }) => distance));\n    const guessCount = win ? guesses.length : \"X\";\n    const dayCount = Math.floor(\n      Interval.fromDateTimes(START_DATE, DateTime.fromISO(DateTime.now().toFormat(\"yyyy-MM-dd\"))).length(\n        \"day\"\n      )\n    );\n    const difficultyModifierEmoji = hideImageMode\n      ? \" 🙈\"\n      : rotationMode\n      ? \" 🌀\"\n      : \"\";\n    const bestPercent = `(${computeProximityPercent(\n      bestDistance\n    ).toString()}%)`;\n    const title = `Flaggle #${dayCount} ${guessCount}/6 ${bestPercent}${difficultyModifierEmoji}`;\n\n    const guessString = guesses\n      .map((guess) => {\n        const percent = computeProximityPercent(guess.distance);\n        const squares = generateSquareCharacters(percent, theme).join(\"\");\n        const direction = getDirectionEmoji(guess);\n        return `${squares}${direction}`;\n      })\n      .join(\"\\n\");\n\n    return [title, guessString, \"https://mattbradley96.github.io/flaggle/\"].join(\"\\n\");\n  }, [dayString, guesses, hideImageMode, rotationMode, theme]);\n\n  return (\n    <CopyToClipboard\n      text={shareText}\n      onCopy={() => toast(t(\"copy\"))}\n      options={{\n        format: \"text/plain\",\n      }}\n    >\n      <button className=\"border-2 px-4 uppercase bg-green-600 hover:bg-green-500 active:bg-green-700 text-white w-full\">\n        {t(\"share\")}\n      </button>\n    </CopyToClipboard>\n  );\n}\n","/home/mb4718/Desktop/flaggle/src/components/Guesses.tsx",[],"/home/mb4718/Desktop/flaggle/src/components/CountryInput.tsx",[],"/home/mb4718/Desktop/flaggle/src/domain/geography.ts",[],"/home/mb4718/Desktop/flaggle/src/domain/stats.ts",[],"/home/mb4718/Desktop/flaggle/src/components/panels/Panel.tsx",[],"/home/mb4718/Desktop/flaggle/src/domain/guess.ts",[],"/home/mb4718/Desktop/flaggle/src/components/GuessRow.tsx",[],"/home/mb4718/Desktop/flaggle/src/components/Flaggle.tsx",[],"/home/mb4718/Desktop/flaggle/src/service-worker.ts",[],["117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":7,"nodeType":"125","messageId":"126","endLine":6,"endColumn":46},{"ruleId":"123","severity":1,"message":"127","line":40,"column":11,"nodeType":"125","messageId":"126","endLine":40,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":109,"column":7,"nodeType":"130","messageId":"131","endLine":114,"endColumn":8,"fix":"132"},{"ruleId":"133","severity":1,"message":"134","line":64,"column":6,"nodeType":"135","endLine":64,"endColumn":62,"suggestions":"136"},{"ruleId":"119","replacedBy":"137"},{"ruleId":"121","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'forcedCountries' is assigned a value but never used.","Identifier","unusedVar","'radianAngle' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"141","text":"142"},"react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'dayString'. Either exclude it or remove the dependency array.","ArrayExpression",["143"],["139"],["140"],"no-global-assign","no-unsafe-negation",[3937,3947],"\"noopener noreferrer\"",{"desc":"144","fix":"145"},"Update the dependencies array to be: [guesses, hideImageMode, rotationMode, theme]",{"range":"146","text":"147"},[1951,2007],"[guesses, hideImageMode, rotationMode, theme]"]